@model project.Models.addmovement

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_LayoutPortal.cshtml";

    if (Session["userID"] == null)
    {
        Response.Redirect("~/Home/Index");
    }
}

<h2 style="text-align:center">New Movement Record</h2>

@using (Html.BeginForm())
{
    //@Html.AntiForgeryToken()

    <div class="container">
        <form class="form-horizontal">
            <h4 style="text-align:center" class="text-success">Enter Details</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })


            <div class="form-group">
                <h4>
                    <label class="control-label col-md-4">
                        @Html.LabelFor(model => model.RefNo)
                    </label>
                </h4>
                <div class="col-md-6">
                    @Html.EditorFor(model => model.RefNo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.RefNo, "", new { @class = "text-danger" })
                </div>
                <br /><br />
            </div>

            <div class="form-group">
                <h4>
                    <label class="control-label col-md-4">
                        @Html.LabelFor(model => model.Date)
                    </label>
                </h4>
                <div class="col-md-6">
                    @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                </div>
                <br /><br />
            </div>

            <div class="form-group">
                <h4>
                    <label class="control-label col-md-4">
                        @Html.LabelFor(model => model.Eventcode)
                    </label>
                </h4>
                <div class="col-md-6">
                    @Html.DropDownListFor(model => model.Eventcode, new SelectList(Model.EventCollection, "Eventcode", "Eventcode"), "Select", new { style = "width:280px; height:30px;" })
                    @Html.ValidationMessageFor(model => model.Eventcode, "", new { @class = "text-danger" })
                </div>
                <br /><br />
            </div>

            <div class="form-group">
                <h4>
                    <label class="control-label col-md-4">
                        @Html.LabelFor(model => model.Description)
                    </label>
                </h4>
                <div class="col-md-6">
                    @Html.DropDownListFor(model => model.Description, new List<SelectListItem>
           {
               new SelectListItem {Text = "Ewes", Value = "Ewes" },
               new SelectListItem {Text = "Lambs", Value = "Lambs" },
               new SelectListItem {Text = "Ewes & Lambs", Value = "Ewes & Lambs" }
           }, "Select", new { style = "width:280px; height:30px;" })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
                <br /><br />
            </div>


            <div class="form-group">
                <h4>
                    <label class="control-label col-md-4">
                        @Html.LabelFor(model => model.NoAnimals)
                    </label>
                </h4>
                <div class="col-md-6">
                    @Html.EditorFor(model => model.NoAnimals, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NoAnimals, "", new { @class = "text-danger" })
                </div>
                <br /><br />
            </div>



            <div class="form-group">
                <div class="col-md-offset-5 col-md-4">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </form>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}